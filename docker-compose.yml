version: '3.8'

services:
  postgres:
    image: postgis/postgis:15-3.3
    container_name: dimp-postgres
    environment:
      - POSTGRES_DB=dimp
      - POSTGRES_USER=dimp_user
      - POSTGRES_PASSWORD=dimp_password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dimp_user -d dimp"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dimp-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dimp-backend
    ports:
      - "8000:8000"
    environment:
      - HERE_API_KEY=${HERE_API_KEY}
      - APP_ENV=production
      - DEBUG=False
      - DATABASE_URL=postgresql://dimp_user:dimp_password@postgres:5432/dimp
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - dimp-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dimp-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - dimp-network

networks:
  dimp-network:
    driver: bridge

volumes:
  postgres-data:
  backend-data:
